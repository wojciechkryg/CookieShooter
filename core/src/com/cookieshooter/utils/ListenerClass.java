package com.cookieshooter.utils;import com.badlogic.gdx.physics.box2d.Contact;import com.badlogic.gdx.physics.box2d.ContactImpulse;import com.badlogic.gdx.physics.box2d.ContactListener;import com.badlogic.gdx.physics.box2d.Manifold;import com.badlogic.gdx.scenes.scene2d.Group;import com.cookieshooter.objects.Bullet;import com.cookieshooter.objects.Enemy;import com.cookieshooter.objects.Player;public class ListenerClass implements ContactListener {    @Override    public void beginContact(Contact contact) {        Object userA = contact.getFixtureA().getBody().getUserData();        Object userB = contact.getFixtureB().getBody().getUserData();        if ((userA instanceof Player && userB instanceof Enemy)) {            ((Player) userA).decreaseLives();            ((Enemy) userB).setIsToDestroy(true);        } else if (userA instanceof Enemy && userB instanceof Player) {            ((Enemy) userA).setIsToDestroy(true);            ((Player)userB).decreaseLives();        } else if (userA instanceof Enemy && userB instanceof Ground) {            ((Enemy) userA).setIsToDestroy(true);        } else if (userA instanceof Ground && userB instanceof Enemy) {            ((Enemy) userB).setIsToDestroy(true);        } else if (userA instanceof Bullet && userB instanceof Enemy) {            ((Bullet) userA).setIsToDestroy(true);            ((Enemy) userB).setIsToDestroy(true);        } else if (userA instanceof Enemy && userB instanceof Bullet) {            ((Bullet) userB).setIsToDestroy(true);            ((Enemy) userA).setIsToDestroy(true);        }    }    @Override    public void endContact(Contact contact) {    }    @Override    public void preSolve(Contact contact, Manifold oldManifold) {    }    @Override    public void postSolve(Contact contact, ContactImpulse impulse) {    }}